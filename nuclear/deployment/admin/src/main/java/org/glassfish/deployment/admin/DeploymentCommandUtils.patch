Index: DeploymentCommandUtils.java
===================================================================
--- DeploymentCommandUtils.java	(revision 57619)
+++ DeploymentCommandUtils.java	(working copy)
@@ -63,6 +63,7 @@
 import org.glassfish.internal.deployment.Deployment;
 import org.glassfish.common.util.admin.ParameterMapExtractor;
 import java.net.InetAddress;
+import java.net.URI;
 import java.net.UnknownHostException;
 import java.io.File;
 import java.io.IOException;
@@ -154,9 +155,9 @@
     }
 
     public static File renameUploadedFileOrCopyInPlaceFile(
-            final File finalUploadDir,
-            final File fileParam,
-            final Logger logger,
+            File finalUploadDir,
+            URI fileParam,
+            Logger logger,
             ServerEnvironment env) throws IOException {
         if (fileParam == null) {
             return null;
@@ -172,48 +173,73 @@
          * directory-deployment case or the in-place archive case if we ae
          * not copying the in-place archive.
          */
-        File result = fileParam;
+        File result;
 
-        if ( ! fileParam.isDirectory() && ! appsDir.toURI().relativize(fileParam.toURI()).isAbsolute()) {
+        if (! appsDir.toURI().relativize(fileParam).isAbsolute()) {
             /*
              * The file lies within the apps directory, so it was
              * uploaded.
              */
-            result = new File(finalUploadDir, fileParam.getName());
-            final long lastMod = fileParam.lastModified();
-            FileUtils.renameFile(fileParam, result);
+            File file = new File(fileParam);
+            result = new File(finalUploadDir, file.getName());
+            final long lastMod = file.lastModified();
+            FileUtils.renameFile(file, result);
             if ( ! result.setLastModified(lastMod)) {
                     logger.log(Level.FINE, "In renaming {0} to {1} could not setLastModified; continuing",
-                            new Object[] {fileParam.getAbsolutePath(),
+                            new Object[] {file.getAbsolutePath(),
                                 result.getAbsolutePath()
                             });
             }
         } else {
+            // See if it is actually a file
+            File file;
+            try {
+                file = new File(fileParam);
+            } catch (IllegalArgumentException iae) {
+                // it is not a file
+                file = null;
+            }
             final boolean copyInPlaceArchive = Boolean.valueOf(
                     System.getProperty(COPY_IN_PLACE_ARCHIVE_PROP_NAME, "true"));
-            if ( ! fileParam.isDirectory() && copyInPlaceArchive) {
-                /*
-                 * The file was not uploaded and the in-place file is not a directory,
-                 * so copy the archive to the permanent location.
-                 */
-                final long startTime = System.currentTimeMillis();
-                result = new File(finalUploadDir, fileParam.getName());
-                FileUtils.copy(fileParam, result);
-                if ( ! result.setLastModified(fileParam.lastModified())) {
-                    logger.log(Level.FINE, "Could not set lastModified for {0}; continuing",
-                            result.getAbsolutePath());
+            if (file != null) {
+                if ( ! file.isDirectory() && copyInPlaceArchive) {
+                    /*
+                     * The file was not uploaded and the in-place file is not a directory,
+                     * so copy the archive to the permanent location.
+                     */
+                    final long startTime = System.currentTimeMillis();
+                    result = new File(finalUploadDir, file.getName());
+                    FileUtils.copy(file, result);
+                    result.setLastModified(file.lastModified());
+                    if (logger.isLoggable(Level.FINE)) {
+                        logger.fine("*** In-place archive copy of " +
+                                file.getAbsolutePath() + " took " +
+                                (System.currentTimeMillis() - startTime) + " ms");
+                    }
+                } else {
+                    result = file;
                 }
-                if (logger.isLoggable(Level.FINE)) {
-                    logger.log(Level.FINE, "*** In-place archive copy of {0} took {1} ms",
-                            new Object[]{
-                                fileParam.getAbsolutePath(),
-                                System.currentTimeMillis() - startTime});
-                }
+            } else {
+            // It is not a file URI. So, we need to copy it
+            final String child = fileParam.getSchemeSpecificPart(); // FIXME: This is not correct
+            result = new File(finalUploadDir, child);
+            FileUtils.copy(file, result);
             }
         }
         return result;
     }
 
+    static File renameUploadedFileOrCopyInPlaceFile(
+            final File finalUploadDir,
+            final File fileParam,
+            final Logger logger,
+            ServerEnvironment env) throws IOException {
+        if (fileParam == null) {
+            return null;
+        }
+        return renameUploadedFileOrCopyInPlaceFile(finalUploadDir, fileParam.toURI(), logger, env);
+    }
+
     private static StringBuilder getTargetResourceName(final Domain d,
                 final String target) {
         final StringBuilder sb = new StringBuilder();
